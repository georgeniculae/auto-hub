server:
  port: ${random.int(8089,9090)}
  error:
    include-message: always
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
  servlet:
    context-path: /expense

spring:
  application:
    name: swift-wheels-hub-expense
  threads:
    virtual:
      enabled: true
  datasource:
    url: jdbc:postgresql://localhost:5432/swift_wheels_hub_expense
    username: ${POSTGRESQL_USERNAME}
    password: ${POSTGRESQL_PASSWORD}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  mvc:
    throw-exception-if-no-handler-found: true
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
  cloud:
    consul:
      config:
        enabled: false
      host: localhost
      port: 8500
      discovery:
        instanceId: ${spring.application.name}-id
        serviceName: ${spring.application.name}
        healthCheckPath: /expense/actuator/health
        healthCheckInterval: 5s
        hostname: localhost
        failFast: false
    function:
      definition: savedBookingConsumer;updatedBookingConsumer;deletedBookingConsumer
    stream:
      defaultBinder: kafka
      bindings:
        auditLogInfoProducer-out-0:
          destination: ${EXPENSE_AUDIT_LOG_INFO_TOPIC}
          contentType: application/json
        emailNotificationProducer-out-0:
          destination: ${EMAIL_NOTIFICATION_TOPIC}
          contentType: application/json
        savedBookingConsumer-in-0:
          binder: kafka
          destination: ${SAVED_BOOKING_TOPIC}
          contentType: application/json
          group: ${BOOKING_CONSUMER_GROUP}
        updatedBookingConsumer-in-0:
          binder: kafka
          destination: ${UPDATED_BOOKING_TOPIC}
          contentType: application/json
          group: ${BOOKING_CONSUMER_GROUP}
        deletedBookingConsumer-in-0:
          binder: kafka
          destination: ${DELETED_BOOKING_TOPIC}
          contentType: application/json
          group: ${BOOKING_CONSUMER_GROUP}
      kafka:
        binder:
          auto-create-topics: true
          auto-add-partitions: false
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            allow.auto.create.topics: true
  kafka:
    bootstrap-servers: localhost:9092
    listener:
      missing-topics-fatal: false
    producer:
      keySerializer: org.apache.kafka.common.serialization.StringSerializer
      valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer
  sendgrid:
    api-key: ${SENDGRID_API_KEY}

apikey:
  secret: ${API_KEY_SECRET}

springdoc:
  swagger-ui:
    enabled: true
    path: /definition/swagger-ui.html
    operationsSorter: method
  api-docs:
    path: /definition/v3/api-docs

management:
  server:
    port: ${server.port}
  endpoint:
    loggers:
      enabled: true
    health:
      group:
        custom:
          show-components: always
          show-details: always
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,loggers,prometheus
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    org:
      springframework:
        security: DEBUG
        web:
          csrf:
            CsrfFilter: DEBUG
        jdbc:
          core:
            JdbcTemplate: DEBUG
            StatementCreatorUtils: TRACE
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE

debezium:
  enabled: true
  connector-name: debezium-expense-postgres-connector
  server-name: expense-postgres-server
  server-id: 10183
  database-name: swift_wheels_hub_expense
  database-host: localhost
  database-port: 5432
  topic-name: ${DEBEZIUM_EMAIL_NOTIFICATION_TOPIC}
  table-name: invoice
  schema-name: public
  slot-name: invoice_slot
  groupId: ${EXPENSE_CONSUMER_GROUP}

rest-client:
  url:
    swift-wheels-hub-bookings: http://swift-wheels-hub-booking/bookings
    swift-wheels-hub-agency-branches: http://swift-wheels-hub-agency/agency/branches
    swift-wheels-hub-agency-cars: http://car-rental-agency/agency/cars
    swift-wheels-hub-agency-employees: http://swift-wheels-hub-agency/agency/employees

sendgrid:
  enabled: true
  mail:
    mailFrom: ${SENDGRID_MAIL_FROM}
    name: Swift Wheels Hub

audit:
  enabled: true

mustache-template:
  enabled: true
